# Default values for iap-ingress.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Name of the secret containing the oauth credential keys:
#   client_id
#   client_secret
oauthSecretName:

# If set, will use existing cert from secret, otherwise the conventional name will be used: "endpointServiceName-tls"
tlsSecretName:

# Name of the upstream service to route to.
targetServiceName:

# Port number of upstream service
targetServicePort: 80

# Extensible Service Proxy (ESP) configuration
esp:
  enabled: false
  
  # Name of the Cloud Endpoints service, this will generate a DNS record in the form of:
  #   NAME.endpoints.PROJECT_ID.cloud.goog
  endpointServiceName:

  image:
    repository: gcr.io/endpoints-release/endpoints-runtime
    tag: "1.0"
    pullPolicy: IfNotPresent

envoy:
  enabled: false

  image:
    repository: envoyproxy/envoy
    tag: v1.9.0
    pullPolicy: IfNotPresent

  # Name of configmap with envoy config, if not specified, a default one will be created.
  # Config must contain a jwt decoder with placeholder values that will be updated:
  # jwts:
  #    audiences: "{JWT_AUDIENCE}"
  #    ...
  configMapName:

  # Key name in configmap containing envoy config
  configMapKey: envoy-config.yaml

  jwtIssuer: https://cloud.google.com/iap
  jwksURI: https://www.gstatic.com/iap/verify/public_key-jwk
  jwtHeaders: x-goog-iap-jwt-assertion

# Name of the project ID for the Cloud Endpoints service
projectID:

ingress:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
  path: /*

cert:
  enabled: true
  issuer: letsencrypt-production
  kind: ClusterIssuer